import java.util.Collection;
import java.util.Collections;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

public class UserPrincipal implements UserDetails {

    private User user;

    public UserPrincipal(User user) {
        this.user = user;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        // Return the authorities for this user (e.g., roles like "USER")
        return Collections.singleton(new SimpleGrantedAuthority("USER"));
    }

    @Override
    public String getPassword() {
        return user.getPassword(); // Return the user's password
    }

    @Override
    public String getUsername() {
        return user.getUsername(); // Return the username
    }

    @Override
    public boolean isAccountNonExpired() {
        return true; // Always return true
    }

    @Override
    public boolean isAccountNonLocked() {
        return true; // Always return true
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true; // Always return true
    }

    @Override
    public boolean isEnabled() {
        return true; // Always return true (user is always enabled)
    }
}
