////package com.example.demo.controller;
////
////import org.springframework.context.annotation.Bean;
////import org.springframework.context.annotation.Configuration;
////import org.springframework.http.HttpMethod;
////import org.springframework.security.authentication.AuthenticationManager;
////import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
////import org.springframework.security.config.annotation.web.builders.HttpSecurity;
////import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
////import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
////import org.springframework.security.core.userdetails.UserDetailsService;
////import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
////import org.springframework.security.crypto.password.PasswordEncoder;
////import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
////
////import com.foodtransparency.security.CustomUserDetailsService;
////import com.foodtransparency.security.JwtAuthenticationEntryPoint;
////import com.foodtransparency.security.JwtAuthenticationFilter;
////
////@Configuration
////@EnableWebSecurity
////public class SecurityConfig extends WebSecurityConfigurerAdapter {
////
////    private final JwtAuthenticationEntryPoint jwtAuthenticationEntryPoint;
////    private final JwtAuthenticationFilter jwtAuthenticationFilter;
////
////    public SecurityConfig(JwtAuthenticationEntryPoint jwtAuthenticationEntryPoint, JwtAuthenticationFilter jwtAuthenticationFilter) {
////        this.jwtAuthenticationEntryPoint = jwtAuthenticationEntryPoint;
////        this.jwtAuthenticationFilter = jwtAuthenticationFilter;
////    }
////
////    @Override
////    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
////        auth.userDetailsService(userDetailsService()).passwordEncoder(passwordEncoder());
////    }
////
////    @Override
////    protected void configure(HttpSecurity http) throws Exception {
////        http.csrf().disable()
////            .exceptionHandling().authenticationEntryPoint(jwtAuthenticationEntryPoint)
////            .and()
////            .authorizeRequests()
////            .antMatchers(HttpMethod.POST, "/api/auth/login", "/api/auth/register").permitAll()
////            .antMatchers("/api/retailer/**").hasRole("RETAILER")
////            .antMatchers("/api/customer/**").hasRole("CUSTOMER")
////            .anyRequest().authenticated()
////            .and()
////            .addFilterBefore(jwtAuthenticationFilter, UsernamePasswordAuthenticationFilter.class);
////    }
////
////    @Bean
////    public UserDetailsService userDetailsService() {
////        return new CustomUserDetailsService();
////    }
////
////    @Bean
////    public PasswordEncoder passwordEncoder() {
////        return new BCryptPasswordEncoder();
////    }
////
////    @Bean
////    @Override
////    public AuthenticationManager authenticationManagerBean() throws Exception {
////        return super.authenticationManagerBean();
////    }
////}
//// WebSecurityConfig.java
//package com.example.demo.controller;
//
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
//import org.springframework.security.crypto.password.PasswordEncoder;
//
//@Configuration
//public class SecurityConfig {
//
//    @Bean
//    public PasswordEncoder passwordEncoder() {
//        return new BCryptPasswordEncoder();
//    }
//}


//package com.example.demo.controller;
//
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
//import org.springframework.security.crypto.password.PasswordEncoder;
//
//@Configuration
//public class SecurityConfig {
//
//    @Bean
//    public PasswordEncoder passwordEncoder() {
//        return new BCryptPasswordEncoder();
//    }
//}

//package com.example.demo.controller;
//
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.config.annotation.web.builders.HttpSecurity;
//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
//import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
//import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
//
//import com.example.demo.security.JwtAuthenticationFilter;
//import com.example.demo.security.JwtTokenProvider;
//
//@Configuration
//@EnableWebSecurity
//public class SecurityConfig extends WebSecurityConfigurerAdapter {
//
//    private final JwtTokenProvider jwtTokenProvider;
//
//    public SecurityConfig(JwtTokenProvider jwtTokenProvider) {
//        this.jwtTokenProvider = jwtTokenProvider;
//    }
//
//    @Override
//    protected void configure(HttpSecurity http) throws Exception {
//        http.cors().and().csrf().disable()
//            .authorizeRequests()
//                .antMatchers("/auth/login").permitAll()
//                .antMatchers("/protected-endpoint").authenticated()
//            .and()
//            .addFilterBefore(new JwtAuthenticationFilter(jwtTokenProvider), UsernamePasswordAuthenticationFilter.class);
//    }
//}

